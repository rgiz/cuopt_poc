services:
  cuopt:
    image: nvidia/cuopt:25.10.0a-cuda12.9-py3.12
    ports:
      - "5000:5000"
    environment:
      - CUOPT_SERVER_PORT=5000
      - CUOPT_SERVER_LOG_LEVEL=info
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=compute,utility
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  api:
    build:
      context: .
      dockerfile: backend/Dockerfile
    container_name: api
    environment:
      PYTHONPATH: /app:/app/src
      # Clean structure: ./data mounts to /app/data, backend finds files in /app/data/private/active
      PRIVATE_DATA_DIR: /app/data
      PRIORITY_MAP_FILE: /app/data/private/active/priority_map.json
      CUOPT_URL: http://cuopt:5000
      CUOPT_SOLVER_TIMEOUT_SEC: ${CUOPT_SOLVER_TIMEOUT_SEC:-30}
      CORS_ALLOW_ORIGINS: http://localhost:8501,http://ui:8501
    volumes:
      - ./:/app
      # Single clean mount: your data directory structure preserved
      - ${DATA_ROOT:-./data}:/app/data
    command: ["uvicorn","backend.main_miles:app","--host","0.0.0.0","--port","8000","--reload"]
    ports:
      - "8000:8000"
    depends_on:
      - cuopt
    restart: unless-stopped

  ui:
    build:
      context: .
      dockerfile: ui/Dockerfile
    container_name: ui
    environment:
      API_BASE_URL: http://api:8000
      STREAMLIT_SERVER_RUN_ON_SAVE: "true"
    command: ["streamlit","run","ui/streamlit_app.py","--server.address=0.0.0.0","--server.port","8501"]
    ports:
      - "8501:8501"
    depends_on:
      - api
    volumes:
      - ./:/app
    restart: unless-stopped

  osrm:
    image: ghcr.io/project-osrm/osrm-backend:latest
    container_name: osrm-backend
    ports:
      - "5001:5000"
    volumes:
      - ${DATA_ROOT:-./data}/osrm:/data
    working_dir: /data
    profiles: ["manual"]
    command: osrm-routed --algorithm mld /data/great-britain-latest.osrm
    restart: unless-stopped